{"ast":null,"code":"import axios from 'axios';\n\n// API Configuration\nconst API_CONFIG = {\n  baseURL: process.env.REACT_APP_API_URL || '/api',\n  timeout: 10000,\n  retries: 3,\n  retryDelay: 1000\n};\n\n// Create axios instance\nconst apiClient = axios.create(API_CONFIG);\n\n// Request interceptor\napiClient.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`API Request [${config.url}]: Token included`);\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`API Request [${config.url}]: No token found`);\n    }\n  }\n\n  // Add request ID for tracking\n  config.headers['X-Request-ID'] = generateRequestId();\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor\napiClient.interceptors.response.use(response => {\n  if (process.env.NODE_ENV === 'development') {\n    console.log(`API Response [${response.config.url}]:`, response.data);\n  }\n  return response;\n}, error => {\n  var _error$response2;\n  if (process.env.NODE_ENV === 'development') {\n    var _error$config, _error$response;\n    console.error(`API Error [${(_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url}]:`, (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n  }\n\n  // Handle authentication errors\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Generate unique request ID\nconst generateRequestId = () => {\n  return `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n};\n\n// Global error handler\nexport const handleApiError = error => {\n  var _error$response3, _error$response4, _error$response5;\n  if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n    // Redirect to login\n    window.location.href = '/login';\n  } else if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 403) {\n    // Show permission denied message\n    showNotification('คุณไม่มีสิทธิ์ในการดำเนินการนี้', 'error');\n  } else if (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) === 422) {\n    // Show validation errors\n    const errors = error.response.data.errors;\n    showValidationErrors(errors);\n  } else {\n    // Show generic error\n    showNotification('เกิดข้อผิดพลาด กรุณาลองใหม่อีกครั้ง', 'error');\n  }\n};\n\n// Simple notification function (can be replaced with your preferred notification library)\nconst showNotification = (message, type = 'info') => {\n  console.log(`${type.toUpperCase()}: ${message}`);\n  // You can integrate with toast libraries like react-toastify here\n};\nconst showValidationErrors = errors => {\n  if (errors && typeof errors === 'object') {\n    Object.values(errors).forEach(error => {\n      showNotification(error, 'error');\n    });\n  }\n};\nexport default apiClient;","map":{"version":3,"names":["axios","API_CONFIG","baseURL","process","env","REACT_APP_API_URL","timeout","retries","retryDelay","apiClient","create","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","NODE_ENV","console","log","url","generateRequestId","error","Promise","reject","response","data","_error$response2","_error$config","_error$response","status","removeItem","window","location","href","Date","now","Math","random","toString","substr","handleApiError","_error$response3","_error$response4","_error$response5","showNotification","errors","showValidationErrors","message","type","toUpperCase","Object","values","forEach"],"sources":["D:/senior.project/pet-health-docs/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// API Configuration\r\nconst API_CONFIG = {\r\n  baseURL: process.env.REACT_APP_API_URL || '/api',\r\n  timeout: 10000,\r\n  retries: 3,\r\n  retryDelay: 1000,\r\n};\r\n\r\n// Create axios instance\r\nconst apiClient = axios.create(API_CONFIG);\r\n\r\n// Request interceptor\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.log(`API Request [${config.url}]: Token included`);\r\n      }\r\n    } else {\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.log(`API Request [${config.url}]: No token found`);\r\n      }\r\n    }\r\n    \r\n    // Add request ID for tracking\r\n    config.headers['X-Request-ID'] = generateRequestId();\r\n    \r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor\r\napiClient.interceptors.response.use(\r\n  (response) => {\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log(`API Response [${response.config.url}]:`, response.data);\r\n    }\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.error(`API Error [${error.config?.url}]:`, error.response?.data);\r\n    }\r\n    \r\n    // Handle authentication errors\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Generate unique request ID\r\nconst generateRequestId = () => {\r\n  return `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n};\r\n\r\n// Global error handler\r\nexport const handleApiError = (error) => {\r\n  if (error.response?.status === 401) {\r\n    // Redirect to login\r\n    window.location.href = '/login';\r\n  } else if (error.response?.status === 403) {\r\n    // Show permission denied message\r\n    showNotification('คุณไม่มีสิทธิ์ในการดำเนินการนี้', 'error');\r\n  } else if (error.response?.status === 422) {\r\n    // Show validation errors\r\n    const errors = error.response.data.errors;\r\n    showValidationErrors(errors);\r\n  } else {\r\n    // Show generic error\r\n    showNotification('เกิดข้อผิดพลาด กรุณาลองใหม่อีกครั้ง', 'error');\r\n  }\r\n};\r\n\r\n// Simple notification function (can be replaced with your preferred notification library)\r\nconst showNotification = (message, type = 'info') => {\r\n  console.log(`${type.toUpperCase()}: ${message}`);\r\n  // You can integrate with toast libraries like react-toastify here\r\n};\r\n\r\nconst showValidationErrors = (errors) => {\r\n  if (errors && typeof errors === 'object') {\r\n    Object.values(errors).forEach(error => {\r\n      showNotification(error, 'error');\r\n    });\r\n  }\r\n};\r\n\r\nexport default apiClient;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}