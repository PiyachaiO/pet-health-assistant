{"ast":null,"code":"import apiClient from'./api';class AuthService{// Login user\nasync login(email,password){try{const response=await apiClient.post('/auth/login',{email,password});const{access_token,user}=response.data;// Store token\nif(typeof window!=='undefined'){localStorage.setItem('token',access_token);}return{success:true,user,access_token};}catch(error){var _error$response,_error$response$data;console.error(\"Full login error response:\",error.response);return{success:false,error:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Login failed'};}}// Register user\nasync register(userData){try{const response=await apiClient.post('/auth/register',userData);const{access_token,user}=response.data;// Store token\nif(typeof window!=='undefined'){localStorage.setItem('token',access_token);}return{success:true,user,access_token};}catch(error){var _error$response2,_error$response2$data;return{success:false,error:((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Registration failed'};}}// Logout user\nasync logout(){try{await apiClient.post('/auth/logout');}catch(error){console.error('Logout error:',error);}finally{if(typeof window!=='undefined'){localStorage.removeItem('token');}}}// Get current user profile\nasync getProfile(){try{const response=await apiClient.get('/users/profile');return{success:true,user:response.data.user};}catch(error){var _error$response3,_error$response3$data;return{success:false,error:((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||'Failed to get profile'};}}// This function already exists, but I will ensure it is correct.\n// No changes needed if it's already there and correct.\n// The existing updateProfile function seems to be targeting /users/profile\n// which is correct according to backend/routes/users.js\n// However, the backend returns the user object directly, not nested under `user`.\nasync updateProfile(profileData){try{const response=await apiClient.put('/users/profile',profileData);return{success:true,user:response.data};// Corrected to response.data\n}catch(error){var _error$response4,_error$response4$data;return{success:false,error:((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||'Failed to update profile'};}}// Refresh token\nasync refreshToken(refreshToken){try{const response=await apiClient.post('/auth/refresh',{refresh_token:refreshToken});const{access_token,refresh_token}=response.data;if(typeof window!=='undefined'){localStorage.setItem('token',access_token);}return{success:true,access_token,refresh_token};}catch(error){var _error$response5,_error$response5$data;return{success:false,error:((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.message)||'Token refresh failed'};}}// Confirm email\nasync confirmEmail(email){try{const response=await apiClient.post('/auth/confirm-email',{email});return{success:true,message:response.data.message};}catch(error){var _error$response6,_error$response6$data;return{success:false,error:((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.message)||'Email confirmation failed'};}}// Check if user is authenticated\nisAuthenticated(){return!!localStorage.getItem('token');}// Get stored token\ngetToken(){return localStorage.getItem('token');}}const authService=new AuthService();export default authService;","map":{"version":3,"names":["apiClient","AuthService","login","email","password","response","post","access_token","user","data","window","localStorage","setItem","success","error","_error$response","_error$response$data","console","message","register","userData","_error$response2","_error$response2$data","logout","removeItem","getProfile","get","_error$response3","_error$response3$data","updateProfile","profileData","put","_error$response4","_error$response4$data","refreshToken","refresh_token","_error$response5","_error$response5$data","confirmEmail","_error$response6","_error$response6$data","isAuthenticated","getItem","getToken","authService"],"sources":["D:/senior.project/pet-health-docs/frontend/src/services/authService.js"],"sourcesContent":["import apiClient from './api';\r\n\r\nclass AuthService {\r\n  // Login user\r\n  async login(email, password) {\r\n    try {\r\n      const response = await apiClient.post('/auth/login', {\r\n        email,\r\n        password,\r\n      });\r\n      \r\n      const { access_token, user } = response.data;\r\n      \r\n      // Store token\r\n      if (typeof window !== 'undefined') {\r\n        localStorage.setItem('token', access_token);\r\n      }\r\n      \r\n      return { success: true, user, access_token };\r\n    } catch (error) {\r\n      console.error(\"Full login error response:\", error.response);\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Login failed',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Register user\r\n  async register(userData) {\r\n    try {\r\n      const response = await apiClient.post('/auth/register', userData);\r\n      const { access_token, user } = response.data;\r\n      \r\n      // Store token\r\n      if (typeof window !== 'undefined') {\r\n        localStorage.setItem('token', access_token);\r\n      }\r\n      \r\n      return { success: true, user, access_token };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Registration failed',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Logout user\r\n  async logout() {\r\n    try {\r\n      await apiClient.post('/auth/logout');\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    } finally {\r\n      if (typeof window !== 'undefined') {\r\n        localStorage.removeItem('token');\r\n      }\r\n    }\r\n  }\r\n\r\n  // Get current user profile\r\n  async getProfile() {\r\n    try {\r\n      const response = await apiClient.get('/users/profile');\r\n      return { success: true, user: response.data.user };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to get profile',\r\n      };\r\n    }\r\n  }\r\n\r\n  // This function already exists, but I will ensure it is correct.\r\n  // No changes needed if it's already there and correct.\r\n  // The existing updateProfile function seems to be targeting /users/profile\r\n  // which is correct according to backend/routes/users.js\r\n  // However, the backend returns the user object directly, not nested under `user`.\r\n  async updateProfile(profileData) {\r\n    try {\r\n      const response = await apiClient.put('/users/profile', profileData);\r\n      return { success: true, user: response.data }; // Corrected to response.data\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to update profile',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Refresh token\r\n  async refreshToken(refreshToken) {\r\n    try {\r\n      const response = await apiClient.post('/auth/refresh', {\r\n        refresh_token: refreshToken,\r\n      });\r\n      \r\n      const { access_token, refresh_token } = response.data;\r\n      if (typeof window !== 'undefined') {\r\n        localStorage.setItem('token', access_token);\r\n      }\r\n      \r\n      return { success: true, access_token, refresh_token };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Token refresh failed',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Confirm email\r\n  async confirmEmail(email) {\r\n    try {\r\n      const response = await apiClient.post('/auth/confirm-email', { email });\r\n      return { success: true, message: response.data.message };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Email confirmation failed',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Check if user is authenticated\r\n  isAuthenticated() {\r\n    return !!localStorage.getItem('token');\r\n  }\r\n\r\n  // Get stored token\r\n  getToken() {\r\n    return localStorage.getItem('token');\r\n  }\r\n}\r\n\r\nconst authService = new AuthService();\r\nexport default authService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}