{"ast":null,"code":"import apiClient from './api';\nclass ArticleService {\n  // Get published articles\n  async getArticles() {\n    try {\n      const response = await apiClient.get('/articles');\n      return {\n        success: true,\n        articles: response.data.articles\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to fetch articles'\n      };\n    }\n  }\n\n  // Get specific article by ID\n  async getArticle(articleId) {\n    try {\n      const response = await apiClient.get(`/articles/${articleId}`);\n      return {\n        success: true,\n        article: response.data.article\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to fetch article'\n      };\n    }\n  }\n\n  // Get all articles (Admin/Vet only)\n  async getAllArticles() {\n    try {\n      const response = await apiClient.get('/articles/admin/all');\n      return {\n        success: true,\n        articles: response.data.articles\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      return {\n        success: false,\n        error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to fetch all articles'\n      };\n    }\n  }\n\n  // Get my articles (for veterinarians)\n  async getMyArticles() {\n    try {\n      const response = await apiClient.get('/articles/admin/all');\n      return {\n        success: true,\n        articles: response.data\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      return {\n        success: false,\n        error: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to fetch my articles'\n      };\n    }\n  }\n\n  // Create new article (Admin/Vet only)\n  async createArticle(articleData) {\n    try {\n      const response = await apiClient.post('/articles', articleData);\n      return {\n        success: true,\n        article: response.data.article\n      };\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      return {\n        success: false,\n        error: ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Failed to create article'\n      };\n    }\n  }\n\n  // Update article (Admin/Vet only)\n  async updateArticle(articleId, articleData) {\n    try {\n      const response = await apiClient.put(`/articles/${articleId}`, articleData);\n      return {\n        success: true,\n        article: response.data.article\n      };\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      return {\n        success: false,\n        error: ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Failed to update article'\n      };\n    }\n  }\n\n  // Publish article (Admin only)\n  async publishArticle(articleId) {\n    try {\n      const response = await apiClient.patch(`/articles/${articleId}/publish`);\n      return {\n        success: true,\n        article: response.data.article\n      };\n    } catch (error) {\n      var _error$response7, _error$response7$data;\n      return {\n        success: false,\n        error: ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || 'Failed to publish article'\n      };\n    }\n  }\n\n  // Delete article (Admin/Vet only)\n  async deleteArticle(articleId) {\n    try {\n      await apiClient.delete(`/articles/${articleId}`);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response8, _error$response8$data;\n      return {\n        success: false,\n        error: ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || 'Failed to delete article'\n      };\n    }\n  }\n}\nconst articleService = new ArticleService();\nexport default articleService;","map":{"version":3,"names":["apiClient","ArticleService","getArticles","response","get","success","articles","data","error","_error$response","_error$response$data","message","getArticle","articleId","article","_error$response2","_error$response2$data","getAllArticles","_error$response3","_error$response3$data","getMyArticles","_error$response4","_error$response4$data","createArticle","articleData","post","_error$response5","_error$response5$data","updateArticle","put","_error$response6","_error$response6$data","publishArticle","patch","_error$response7","_error$response7$data","deleteArticle","delete","_error$response8","_error$response8$data","articleService"],"sources":["D:/senior.project/pet-health-docs/frontend/src/services/articleService.js"],"sourcesContent":["import apiClient from './api';\r\n\r\nclass ArticleService {\r\n  // Get published articles\r\n  async getArticles() {\r\n    try {\r\n      const response = await apiClient.get('/articles');\r\n      return { success: true, articles: response.data.articles };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to fetch articles',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Get specific article by ID\r\n  async getArticle(articleId) {\r\n    try {\r\n      const response = await apiClient.get(`/articles/${articleId}`);\r\n      return { success: true, article: response.data.article };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to fetch article',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Get all articles (Admin/Vet only)\r\n  async getAllArticles() {\r\n    try {\r\n      const response = await apiClient.get('/articles/admin/all');\r\n      return { success: true, articles: response.data.articles };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to fetch all articles',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Get my articles (for veterinarians)\r\n  async getMyArticles() {\r\n    try {\r\n      const response = await apiClient.get('/articles/admin/all');\r\n      return { success: true, articles: response.data };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to fetch my articles',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Create new article (Admin/Vet only)\r\n  async createArticle(articleData) {\r\n    try {\r\n      const response = await apiClient.post('/articles', articleData);\r\n      return { success: true, article: response.data.article };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to create article',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Update article (Admin/Vet only)\r\n  async updateArticle(articleId, articleData) {\r\n    try {\r\n      const response = await apiClient.put(`/articles/${articleId}`, articleData);\r\n      return { success: true, article: response.data.article };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to update article',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Publish article (Admin only)\r\n  async publishArticle(articleId) {\r\n    try {\r\n      const response = await apiClient.patch(`/articles/${articleId}/publish`);\r\n      return { success: true, article: response.data.article };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to publish article',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Delete article (Admin/Vet only)\r\n  async deleteArticle(articleId) {\r\n    try {\r\n      await apiClient.delete(`/articles/${articleId}`);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to delete article',\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nconst articleService = new ArticleService();\r\nexport default articleService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}