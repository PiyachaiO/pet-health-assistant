{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\senior.project\\\\pet-health-docs\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { petService, notificationService, appointmentService } from \"../services\";\nimport { useApi } from \"../hooks\";\nimport { Plus, Heart, Bell, Calendar, PawPrint } from \"lucide-react\";\nimport AddPetModal from \"../components/AddPetModal\";\n\n// Robust extractor: รองรับหลายรูปแบบ response (array, {notifications: [...]}, {data: {...}}, object-indexed)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst extractArray = (res, key) => {\n  if (!res) return [];\n  // direct array\n  if (Array.isArray(res)) return res;\n  // res[key] as array\n  if (res[key] && Array.isArray(res[key])) return res[key];\n  // axios-like res.data\n  if (res.data) {\n    if (Array.isArray(res.data)) return res.data;\n    if (res.data[key] && Array.isArray(res.data[key])) return res.data[key];\n    // res.data is object with numeric keys -> convert\n    const valsFromData = Object.values(res.data);\n    if (valsFromData.length && valsFromData.every(v => typeof v === \"object\" && v !== null && (\"id\" in v || \"title\" in v))) {\n      return valsFromData;\n    }\n  }\n  // res is object with numeric keys -> convert\n  const vals = Object.values(res);\n  if (vals.length && vals.every(v => typeof v === \"object\" && v !== null && (\"id\" in v || \"title\" in v))) {\n    return vals;\n  }\n  return [];\n};\nconst Dashboard = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [pets, setPets] = useState([]);\n  const [notifications, setNotifications] = useState([]);\n  const [todayNotifications, setTodayNotifications] = useState([]);\n  const [nextAppointment, setNextAppointment] = useState(null);\n  const [showAddPetModal, setShowAddPetModal] = useState(false);\n  const {\n    loading,\n    execute\n  } = useApi();\n\n  // helper: direct fetch fallback (debug)\n  const rawFetchNotifications = async () => {\n    try {\n      const base = process.env.REACT_APP_API_BASE_URL || process.env.VITE_API_BASE_URL || \"\";\n      const url = base ? `${base.replace(/\\/$/, \"\")}/api/notifications` : \"/api/notifications\";\n      const token = localStorage.getItem(\"access_token\");\n      const res = await fetch(url + `?_ts=${Date.now()}`, {\n        headers: token ? {\n          Authorization: `Bearer ${token}`\n        } : {}\n      });\n      const json = await res.json();\n      console.log(\"[Dashboard][rawFetchNotifications] response:\", json);\n      return json;\n    } catch (e) {\n      console.error(\"[Dashboard][rawFetchNotifications] error:\", e);\n      return null;\n    }\n  };\n  const fetchDashboardData = useCallback(async () => {\n    if (!user) return;\n    setPets([]);\n    setNotifications([]);\n    setTodayNotifications([]);\n    setNextAppointment(null);\n    const ts = Date.now();\n    try {\n      const [petsRes, notiRes, apptRes] = await Promise.all([execute(() => petService.getPets({\n        params: {\n          _ts: ts\n        }\n      }), {\n        showError: true\n      }), execute(() => notificationService.getNotifications({\n        params: {\n          _ts: ts\n        }\n      }), {\n        showError: true\n      }), execute(() => appointmentService.getAppointments({\n        params: {\n          _ts: ts\n        }\n      }), {\n        showError: true\n      })]);\n\n      // Pets\n      if (petsRes) {\n        const petsArr = extractArray(petsRes, \"pets\");\n        setPets(petsArr);\n        console.log(\"[Dashboard] pets:\", petsArr);\n      }\n\n      // Notifications (main)\n      let allNotis = [];\n      if (notiRes) {\n        allNotis = extractArray(notiRes, \"notifications\");\n        console.log(\"[Dashboard] notiRes (parsed):\", allNotis);\n      }\n\n      // If parsed empty but network preview shows data -> try raw fetch fallback\n      if (!allNotis || allNotis.length === 0) {\n        console.log(\"[Dashboard] parsed notifications empty; attempting raw fetch fallback...\");\n        const raw = await rawFetchNotifications();\n        if (raw) {\n          allNotis = extractArray(raw, \"notifications\");\n          console.log(\"[Dashboard] rawFetch parsed:\", allNotis);\n        }\n      }\n\n      // set notifications to whatever we have\n      setNotifications(allNotis || []);\n\n      // Filter today's notifications by YYYY-MM-DD (avoid timezone issues)\n      const todayStr = new Date().toISOString().slice(0, 10);\n      const todays = (allNotis || []).filter(n => {\n        if (!(n !== null && n !== void 0 && n.due_date)) return false;\n        const dueStr = new Date(n.due_date).toISOString().slice(0, 10);\n        return dueStr === todayStr && !n.is_completed;\n      });\n      setTodayNotifications(todays);\n      console.log(\"[Dashboard] notifications (today):\", todays);\n\n      // Appointments\n      if (apptRes) {\n        const appts = extractArray(apptRes, \"appointments\");\n        console.log(\"[Dashboard] appointments:\", appts);\n        const now = new Date();\n        const scheduled = (appts || []).filter(a => (a === null || a === void 0 ? void 0 : a.status) === \"scheduled\" && new Date(a.appointment_date) >= now).sort((a, b) => new Date(a.appointment_date) - new Date(b.appointment_date));\n        setNextAppointment(scheduled[0] || null);\n      }\n    } catch (err) {\n      console.error(\"Dashboard fetch error:\", err);\n    }\n  }, [user, execute]);\n  useEffect(() => {\n    fetchDashboardData();\n  }, [fetchDashboardData]);\n  const handlePetAdded = () => {\n    setShowAddPetModal(false);\n    fetchDashboardData();\n  };\n  if (loading && pets.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-32 w-32 border-b-2 border-green-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 py-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), showAddPetModal && /*#__PURE__*/_jsxDEV(AddPetModal, {\n      onClose: () => setShowAddPetModal(false),\n      onPetAdded: handlePetAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"IQB4/l/HWZMRe5t6KMyfSkJVvPI=\", false, function () {\n  return [useAuth, useApi];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","useCallback","Link","useAuth","petService","notificationService","appointmentService","useApi","Plus","Heart","Bell","Calendar","PawPrint","AddPetModal","jsxDEV","_jsxDEV","extractArray","res","key","Array","isArray","data","valsFromData","Object","values","length","every","v","vals","Dashboard","user","pets","setPets","notifications","setNotifications","todayNotifications","setTodayNotifications","nextAppointment","setNextAppointment","showAddPetModal","setShowAddPetModal","loading","execute","rawFetchNotifications","base","process","env","REACT_APP_API_BASE_URL","VITE_API_BASE_URL","url","replace","token","localStorage","getItem","fetch","Date","now","headers","Authorization","json","console","log","e","error","fetchDashboardData","ts","petsRes","notiRes","apptRes","Promise","all","getPets","params","_ts","showError","getNotifications","getAppointments","petsArr","allNotis","raw","todayStr","toISOString","slice","todays","filter","n","due_date","dueStr","is_completed","appts","scheduled","a","status","appointment_date","sort","b","err","handlePetAdded","className","children","fileName","lineNumber","columnNumber","onClose","onPetAdded","_c","$RefreshReg$"],"sources":["D:/senior.project/pet-health-docs/frontend/src/pages/Dashboard.js"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect, useCallback } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { petService, notificationService, appointmentService } from \"../services\"\nimport { useApi } from \"../hooks\"\nimport { Plus, Heart, Bell, Calendar, PawPrint } from \"lucide-react\"\nimport AddPetModal from \"../components/AddPetModal\"\n\n// Robust extractor: รองรับหลายรูปแบบ response (array, {notifications: [...]}, {data: {...}}, object-indexed)\nconst extractArray = (res, key) => {\n  if (!res) return []\n  // direct array\n  if (Array.isArray(res)) return res\n  // res[key] as array\n  if (res[key] && Array.isArray(res[key])) return res[key]\n  // axios-like res.data\n  if (res.data) {\n    if (Array.isArray(res.data)) return res.data\n    if (res.data[key] && Array.isArray(res.data[key])) return res.data[key]\n    // res.data is object with numeric keys -> convert\n    const valsFromData = Object.values(res.data)\n    if (valsFromData.length && valsFromData.every(v => typeof v === \"object\" && v !== null && (\"id\" in v || \"title\" in v))) {\n      return valsFromData\n    }\n  }\n  // res is object with numeric keys -> convert\n  const vals = Object.values(res)\n  if (vals.length && vals.every(v => typeof v === \"object\" && v !== null && (\"id\" in v || \"title\" in v))) {\n    return vals\n  }\n  return []\n}\n\nconst Dashboard = () => {\n  const { user } = useAuth()\n  const [pets, setPets] = useState([])\n  const [notifications, setNotifications] = useState([])\n  const [todayNotifications, setTodayNotifications] = useState([])\n  const [nextAppointment, setNextAppointment] = useState(null)\n  const [showAddPetModal, setShowAddPetModal] = useState(false)\n  const { loading, execute } = useApi()\n\n  // helper: direct fetch fallback (debug)\n  const rawFetchNotifications = async () => {\n    try {\n      const base = process.env.REACT_APP_API_BASE_URL || process.env.VITE_API_BASE_URL || \"\"\n      const url = base ? `${base.replace(/\\/$/, \"\")}/api/notifications` : \"/api/notifications\"\n      const token = localStorage.getItem(\"access_token\")\n      const res = await fetch(url + `?_ts=${Date.now()}`, {\n        headers: token ? { Authorization: `Bearer ${token}` } : {}\n      })\n      const json = await res.json()\n      console.log(\"[Dashboard][rawFetchNotifications] response:\", json)\n      return json\n    } catch (e) {\n      console.error(\"[Dashboard][rawFetchNotifications] error:\", e)\n      return null\n    }\n  }\n\n  const fetchDashboardData = useCallback(async () => {\n    if (!user) return\n\n    setPets([])\n    setNotifications([])\n    setTodayNotifications([])\n    setNextAppointment(null)\n\n    const ts = Date.now()\n    try {\n      const [petsRes, notiRes, apptRes] = await Promise.all([\n        execute(() => petService.getPets({ params: { _ts: ts } }), { showError: true }),\n        execute(() => notificationService.getNotifications({ params: { _ts: ts } }), { showError: true }),\n        execute(() => appointmentService.getAppointments({ params: { _ts: ts } }), { showError: true })\n      ])\n\n      // Pets\n      if (petsRes) {\n        const petsArr = extractArray(petsRes, \"pets\")\n        setPets(petsArr)\n        console.log(\"[Dashboard] pets:\", petsArr)\n      }\n\n      // Notifications (main)\n      let allNotis = []\n      if (notiRes) {\n        allNotis = extractArray(notiRes, \"notifications\")\n        console.log(\"[Dashboard] notiRes (parsed):\", allNotis)\n      }\n\n      // If parsed empty but network preview shows data -> try raw fetch fallback\n      if ((!allNotis || allNotis.length === 0)) {\n        console.log(\"[Dashboard] parsed notifications empty; attempting raw fetch fallback...\")\n        const raw = await rawFetchNotifications()\n        if (raw) {\n          allNotis = extractArray(raw, \"notifications\")\n          console.log(\"[Dashboard] rawFetch parsed:\", allNotis)\n        }\n      }\n\n      // set notifications to whatever we have\n      setNotifications(allNotis || [])\n\n      // Filter today's notifications by YYYY-MM-DD (avoid timezone issues)\n      const todayStr = new Date().toISOString().slice(0, 10)\n      const todays = (allNotis || []).filter(n => {\n        if (!n?.due_date) return false\n        const dueStr = new Date(n.due_date).toISOString().slice(0, 10)\n        return dueStr === todayStr && !n.is_completed\n      })\n      setTodayNotifications(todays)\n      console.log(\"[Dashboard] notifications (today):\", todays)\n\n      // Appointments\n      if (apptRes) {\n        const appts = extractArray(apptRes, \"appointments\")\n        console.log(\"[Dashboard] appointments:\", appts)\n        const now = new Date()\n        const scheduled = (appts || [])\n          .filter(a => a?.status === \"scheduled\" && new Date(a.appointment_date) >= now)\n          .sort((a, b) => new Date(a.appointment_date) - new Date(b.appointment_date))\n        setNextAppointment(scheduled[0] || null)\n      }\n    } catch (err) {\n      console.error(\"Dashboard fetch error:\", err)\n    }\n  }, [user, execute])\n\n  useEffect(() => { fetchDashboardData() }, [fetchDashboardData])\n\n  const handlePetAdded = () => {\n    setShowAddPetModal(false)\n    fetchDashboardData()\n  }\n\n  if (loading && pets.length === 0) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-green-500\"></div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-8\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* header + cards + sections (เหมือนโค้ดก่อนหน้า) */}\n        {/* ... (ใช้โค้ด rendering เดิมที่ผมส่งก่อนหน้านี้) */}\n        {/* ให้แน่ใจว่าคุณวางส่วน render เหมือนในตัวอย่างก่อนหน้า */}\n      </div>\n\n      {showAddPetModal && (\n        <AddPetModal onClose={() => setShowAddPetModal(false)} onPetAdded={handlePetAdded} />\n      )}\n    </div>\n  )\n}\n\nexport default Dashboard\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;AAEZ,SAASC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,OAAO,QAAQ,yBAAyB;AACjD,SAASC,UAAU,EAAEC,mBAAmB,EAAEC,kBAAkB,QAAQ,aAAa;AACjF,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,IAAI,EAAEC,KAAK,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,cAAc;AACpE,OAAOC,WAAW,MAAM,2BAA2B;;AAEnD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAK;EACjC,IAAI,CAACD,GAAG,EAAE,OAAO,EAAE;EACnB;EACA,IAAIE,KAAK,CAACC,OAAO,CAACH,GAAG,CAAC,EAAE,OAAOA,GAAG;EAClC;EACA,IAAIA,GAAG,CAACC,GAAG,CAAC,IAAIC,KAAK,CAACC,OAAO,CAACH,GAAG,CAACC,GAAG,CAAC,CAAC,EAAE,OAAOD,GAAG,CAACC,GAAG,CAAC;EACxD;EACA,IAAID,GAAG,CAACI,IAAI,EAAE;IACZ,IAAIF,KAAK,CAACC,OAAO,CAACH,GAAG,CAACI,IAAI,CAAC,EAAE,OAAOJ,GAAG,CAACI,IAAI;IAC5C,IAAIJ,GAAG,CAACI,IAAI,CAACH,GAAG,CAAC,IAAIC,KAAK,CAACC,OAAO,CAACH,GAAG,CAACI,IAAI,CAACH,GAAG,CAAC,CAAC,EAAE,OAAOD,GAAG,CAACI,IAAI,CAACH,GAAG,CAAC;IACvE;IACA,MAAMI,YAAY,GAAGC,MAAM,CAACC,MAAM,CAACP,GAAG,CAACI,IAAI,CAAC;IAC5C,IAAIC,YAAY,CAACG,MAAM,IAAIH,YAAY,CAACI,KAAK,CAACC,CAAC,IAAI,OAAOA,CAAC,KAAK,QAAQ,IAAIA,CAAC,KAAK,IAAI,KAAK,IAAI,IAAIA,CAAC,IAAI,OAAO,IAAIA,CAAC,CAAC,CAAC,EAAE;MACtH,OAAOL,YAAY;IACrB;EACF;EACA;EACA,MAAMM,IAAI,GAAGL,MAAM,CAACC,MAAM,CAACP,GAAG,CAAC;EAC/B,IAAIW,IAAI,CAACH,MAAM,IAAIG,IAAI,CAACF,KAAK,CAACC,CAAC,IAAI,OAAOA,CAAC,KAAK,QAAQ,IAAIA,CAAC,KAAK,IAAI,KAAK,IAAI,IAAIA,CAAC,IAAI,OAAO,IAAIA,CAAC,CAAC,CAAC,EAAE;IACtG,OAAOC,IAAI;EACb;EACA,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAhC,EAAA;EACtB,MAAM;IAAEiC;EAAK,CAAC,GAAG3B,OAAO,CAAC,CAAC;EAC1B,MAAM,CAAC4B,IAAI,EAAEC,OAAO,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACkC,aAAa,EAAEC,gBAAgB,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACoC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACsC,eAAe,EAAEC,kBAAkB,CAAC,GAAGvC,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACwC,eAAe,EAAEC,kBAAkB,CAAC,GAAGzC,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM;IAAE0C,OAAO;IAAEC;EAAQ,CAAC,GAAGnC,MAAM,CAAC,CAAC;;EAErC;EACA,MAAMoC,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAI;MACF,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAIF,OAAO,CAACC,GAAG,CAACE,iBAAiB,IAAI,EAAE;MACtF,MAAMC,GAAG,GAAGL,IAAI,GAAG,GAAGA,IAAI,CAACM,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,oBAAoB,GAAG,oBAAoB;MACxF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MAClD,MAAMpC,GAAG,GAAG,MAAMqC,KAAK,CAACL,GAAG,GAAG,QAAQM,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE;QAClDC,OAAO,EAAEN,KAAK,GAAG;UAAEO,aAAa,EAAE,UAAUP,KAAK;QAAG,CAAC,GAAG,CAAC;MAC3D,CAAC,CAAC;MACF,MAAMQ,IAAI,GAAG,MAAM1C,GAAG,CAAC0C,IAAI,CAAC,CAAC;MAC7BC,OAAO,CAACC,GAAG,CAAC,8CAA8C,EAAEF,IAAI,CAAC;MACjE,OAAOA,IAAI;IACb,CAAC,CAAC,OAAOG,CAAC,EAAE;MACVF,OAAO,CAACG,KAAK,CAAC,2CAA2C,EAAED,CAAC,CAAC;MAC7D,OAAO,IAAI;IACb;EACF,CAAC;EAED,MAAME,kBAAkB,GAAG/D,WAAW,CAAC,YAAY;IACjD,IAAI,CAAC6B,IAAI,EAAE;IAEXE,OAAO,CAAC,EAAE,CAAC;IACXE,gBAAgB,CAAC,EAAE,CAAC;IACpBE,qBAAqB,CAAC,EAAE,CAAC;IACzBE,kBAAkB,CAAC,IAAI,CAAC;IAExB,MAAM2B,EAAE,GAAGV,IAAI,CAACC,GAAG,CAAC,CAAC;IACrB,IAAI;MACF,MAAM,CAACU,OAAO,EAAEC,OAAO,EAAEC,OAAO,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACpD5B,OAAO,CAAC,MAAMtC,UAAU,CAACmE,OAAO,CAAC;QAAEC,MAAM,EAAE;UAAEC,GAAG,EAAER;QAAG;MAAE,CAAC,CAAC,EAAE;QAAES,SAAS,EAAE;MAAK,CAAC,CAAC,EAC/EhC,OAAO,CAAC,MAAMrC,mBAAmB,CAACsE,gBAAgB,CAAC;QAAEH,MAAM,EAAE;UAAEC,GAAG,EAAER;QAAG;MAAE,CAAC,CAAC,EAAE;QAAES,SAAS,EAAE;MAAK,CAAC,CAAC,EACjGhC,OAAO,CAAC,MAAMpC,kBAAkB,CAACsE,eAAe,CAAC;QAAEJ,MAAM,EAAE;UAAEC,GAAG,EAAER;QAAG;MAAE,CAAC,CAAC,EAAE;QAAES,SAAS,EAAE;MAAK,CAAC,CAAC,CAChG,CAAC;;MAEF;MACA,IAAIR,OAAO,EAAE;QACX,MAAMW,OAAO,GAAG7D,YAAY,CAACkD,OAAO,EAAE,MAAM,CAAC;QAC7ClC,OAAO,CAAC6C,OAAO,CAAC;QAChBjB,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEgB,OAAO,CAAC;MAC3C;;MAEA;MACA,IAAIC,QAAQ,GAAG,EAAE;MACjB,IAAIX,OAAO,EAAE;QACXW,QAAQ,GAAG9D,YAAY,CAACmD,OAAO,EAAE,eAAe,CAAC;QACjDP,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEiB,QAAQ,CAAC;MACxD;;MAEA;MACA,IAAK,CAACA,QAAQ,IAAIA,QAAQ,CAACrD,MAAM,KAAK,CAAC,EAAG;QACxCmC,OAAO,CAACC,GAAG,CAAC,0EAA0E,CAAC;QACvF,MAAMkB,GAAG,GAAG,MAAMpC,qBAAqB,CAAC,CAAC;QACzC,IAAIoC,GAAG,EAAE;UACPD,QAAQ,GAAG9D,YAAY,CAAC+D,GAAG,EAAE,eAAe,CAAC;UAC7CnB,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEiB,QAAQ,CAAC;QACvD;MACF;;MAEA;MACA5C,gBAAgB,CAAC4C,QAAQ,IAAI,EAAE,CAAC;;MAEhC;MACA,MAAME,QAAQ,GAAG,IAAIzB,IAAI,CAAC,CAAC,CAAC0B,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;MACtD,MAAMC,MAAM,GAAG,CAACL,QAAQ,IAAI,EAAE,EAAEM,MAAM,CAACC,CAAC,IAAI;QAC1C,IAAI,EAACA,CAAC,aAADA,CAAC,eAADA,CAAC,CAAEC,QAAQ,GAAE,OAAO,KAAK;QAC9B,MAAMC,MAAM,GAAG,IAAIhC,IAAI,CAAC8B,CAAC,CAACC,QAAQ,CAAC,CAACL,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;QAC9D,OAAOK,MAAM,KAAKP,QAAQ,IAAI,CAACK,CAAC,CAACG,YAAY;MAC/C,CAAC,CAAC;MACFpD,qBAAqB,CAAC+C,MAAM,CAAC;MAC7BvB,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEsB,MAAM,CAAC;;MAEzD;MACA,IAAIf,OAAO,EAAE;QACX,MAAMqB,KAAK,GAAGzE,YAAY,CAACoD,OAAO,EAAE,cAAc,CAAC;QACnDR,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE4B,KAAK,CAAC;QAC/C,MAAMjC,GAAG,GAAG,IAAID,IAAI,CAAC,CAAC;QACtB,MAAMmC,SAAS,GAAG,CAACD,KAAK,IAAI,EAAE,EAC3BL,MAAM,CAACO,CAAC,IAAI,CAAAA,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEC,MAAM,MAAK,WAAW,IAAI,IAAIrC,IAAI,CAACoC,CAAC,CAACE,gBAAgB,CAAC,IAAIrC,GAAG,CAAC,CAC7EsC,IAAI,CAAC,CAACH,CAAC,EAAEI,CAAC,KAAK,IAAIxC,IAAI,CAACoC,CAAC,CAACE,gBAAgB,CAAC,GAAG,IAAItC,IAAI,CAACwC,CAAC,CAACF,gBAAgB,CAAC,CAAC;QAC9EvD,kBAAkB,CAACoD,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;MAC1C;IACF,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZpC,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEiC,GAAG,CAAC;IAC9C;EACF,CAAC,EAAE,CAAClE,IAAI,EAAEY,OAAO,CAAC,CAAC;EAEnB1C,SAAS,CAAC,MAAM;IAAEgE,kBAAkB,CAAC,CAAC;EAAC,CAAC,EAAE,CAACA,kBAAkB,CAAC,CAAC;EAE/D,MAAMiC,cAAc,GAAGA,CAAA,KAAM;IAC3BzD,kBAAkB,CAAC,KAAK,CAAC;IACzBwB,kBAAkB,CAAC,CAAC;EACtB,CAAC;EAED,IAAIvB,OAAO,IAAIV,IAAI,CAACN,MAAM,KAAK,CAAC,EAAE;IAChC,oBACEV,OAAA;MAAKmF,SAAS,EAAC,+CAA+C;MAAAC,QAAA,eAC5DpF,OAAA;QAAKmF,SAAS,EAAC;MAAiE;QAAAE,QAAA,EAAAxG,YAAA;QAAAyG,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAF,QAAA,EAAAxG,YAAA;MAAAyG,UAAA;MAAAC,YAAA;IAAA,OACpF,CAAC;EAEV;EAEA,oBACEvF,OAAA;IAAKmF,SAAS,EAAC,8BAA8B;IAAAC,QAAA,gBAC3CpF,OAAA;MAAKmF,SAAS,EAAC;IAAwC;MAAAE,QAAA,EAAAxG,YAAA;MAAAyG,UAAA;MAAAC,YAAA;IAAA,OAIlD,CAAC,EAEL/D,eAAe,iBACdxB,OAAA,CAACF,WAAW;MAAC0F,OAAO,EAAEA,CAAA,KAAM/D,kBAAkB,CAAC,KAAK,CAAE;MAACgE,UAAU,EAAEP;IAAe;MAAAG,QAAA,EAAAxG,YAAA;MAAAyG,UAAA;MAAAC,YAAA;IAAA,OAAE,CACrF;EAAA;IAAAF,QAAA,EAAAxG,YAAA;IAAAyG,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAAzG,EAAA,CA3HKgC,SAAS;EAAA,QACI1B,OAAO,EAMKI,MAAM;AAAA;AAAAkG,EAAA,GAP/B5E,SAAS;AA6Hf,eAAeA,SAAS;AAAA,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}