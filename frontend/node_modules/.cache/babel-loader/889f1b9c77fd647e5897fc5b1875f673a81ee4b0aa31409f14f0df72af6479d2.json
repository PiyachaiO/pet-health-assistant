{"ast":null,"code":"\"use client\";import{createContext,useContext,useState,useEffect}from\"react\";import{authService}from\"../services\";import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error(\"useAuth must be used within an AuthProvider\");}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{// Check if we're in browser environment\nif(typeof window!=='undefined'){const token=localStorage.getItem(\"token\");if(token){fetchUser();}else{setLoading(false);}}else{setLoading(false);}},[]);const fetchUser=async()=>{setLoading(true);try{const result=await authService.getProfile();if(result.success&&result.user){const userData=result.user;// Skip loading profile image in AuthContext to avoid CORS issues\n// Profile images will be loaded in individual components using Base64\nsetUser(userData);}else{console.error(\"Failed to fetch user profile:\",result);setUser(null);// Explicitly set user to null on failure\nlocalStorage.removeItem(\"token\");}}catch(error){console.error(\"Error fetching user:\",error);setUser(null);localStorage.removeItem(\"token\");}finally{setLoading(false);}};const login=async(email,password)=>{setLoading(true);try{const result=await authService.login(email,password);if(result.success&&result.user){const userData=result.user;// Skip loading profile image in AuthContext to avoid CORS issues\n// Profile images will be loaded in individual components using Base64\nsetUser(userData);}return result;}catch(error){return{success:false,error:\"Login failed\"};}finally{setLoading(false);}};const register=async userData=>{try{const result=await authService.register(userData);if(result.success){setUser(result.user);}return result;}catch(error){return{success:false,error:\"Registration failed\"};}};const logout=async()=>{try{await authService.logout();}catch(error){console.error(\"Logout error:\",error);}finally{setUser(null);// Also remove the token from localStorage on logout\nlocalStorage.removeItem(\"token\");}};const updateProfile=async profileData=>{try{const result=await authService.updateProfile(profileData);if(result.success){setUser(result.user);}return result;}catch(error){return{success:false,error:\"Failed to update profile\"};}};const updateUser=userData=>{setUser(userData);};const refreshUser=async()=>{try{await fetchUser();}catch(error){console.error(\"Failed to refresh user:\",error);// Don't logout user on refresh failure\n}};const value={user,login,register,logout,updateProfile,updateUser,refreshUser,loading};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["createContext","useContext","useState","useEffect","authService","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","window","token","localStorage","getItem","fetchUser","result","getProfile","success","userData","console","error","removeItem","login","email","password","register","logout","updateProfile","profileData","updateUser","refreshUser","value","Provider"],"sources":["D:/senior.project/pet-health-docs/frontend/src/contexts/AuthContext.js"],"sourcesContent":["\"use client\"\n\nimport { createContext, useContext, useState, useEffect } from \"react\"\nimport { authService } from \"../services\"\n\nconst AuthContext = createContext()\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext)\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\")\n  }\n  return context\n}\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    // Check if we're in browser environment\n    if (typeof window !== 'undefined') {\n      const token = localStorage.getItem(\"token\");\n      if (token) {\n        fetchUser();\n      } else {\n        setLoading(false);\n      }\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const fetchUser = async () => {\n    setLoading(true);\n    try {\n      const result = await authService.getProfile();\n      if (result.success && result.user) {\n        const userData = result.user;\n        \n        // Skip loading profile image in AuthContext to avoid CORS issues\n        // Profile images will be loaded in individual components using Base64\n        \n        setUser(userData);\n      } else {\n        console.error(\"Failed to fetch user profile:\", result);\n        setUser(null); // Explicitly set user to null on failure\n        localStorage.removeItem(\"token\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching user:\", error);\n      setUser(null);\n      localStorage.removeItem(\"token\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (email, password) => {\n    setLoading(true);\n    try {\n      const result = await authService.login(email, password);\n      if (result.success && result.user) {\n        const userData = result.user;\n        \n        // Skip loading profile image in AuthContext to avoid CORS issues\n        // Profile images will be loaded in individual components using Base64\n        \n        setUser(userData);\n      }\n      return result;\n    } catch (error) {\n      return {\n        success: false,\n        error: \"Login failed\",\n      };\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  const register = async (userData) => {\n    try {\n      const result = await authService.register(userData)\n      if (result.success) {\n        setUser(result.user)\n      }\n      return result\n    } catch (error) {\n      return {\n        success: false,\n        error: \"Registration failed\",\n      }\n    }\n  }\n\n  const logout = async () => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    } finally {\n      setUser(null);\n      // Also remove the token from localStorage on logout\n      localStorage.removeItem(\"token\");\n    }\n  }\n\n  const updateProfile = async (profileData) => {\n    try {\n      const result = await authService.updateProfile(profileData)\n      if (result.success) {\n        setUser(result.user)\n      }\n      return result\n    } catch (error) {\n      return {\n        success: false,\n        error: \"Failed to update profile\",\n      }\n    }\n  }\n\n  const updateUser = (userData) => {\n    setUser(userData)\n  }\n\n  const refreshUser = async () => {\n    try {\n      await fetchUser()\n    } catch (error) {\n      console.error(\"Failed to refresh user:\", error)\n      // Don't logout user on refresh failure\n    }\n  }\n\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    updateProfile,\n    updateUser,\n    refreshUser,\n    loading,\n  }\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}