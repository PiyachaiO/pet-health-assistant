{"ast":null,"code":"import apiClient from './api';\nclass NutritionService {\n  // Get approved nutrition guidelines\n  async getGuidelines() {\n    try {\n      const response = await apiClient.get('/nutrition/guidelines');\n      return {\n        success: true,\n        guidelines: response.data.guidelines\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to fetch nutrition guidelines'\n      };\n    }\n  }\n\n  // Get specific nutrition guideline\n  async getGuideline(guidelineId) {\n    try {\n      const response = await apiClient.get(`/nutrition/guidelines/${guidelineId}`);\n      return {\n        success: true,\n        guideline: response.data.guideline\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to fetch nutrition guideline'\n      };\n    }\n  }\n\n  // Get nutrition recommendations for pets\n  async getRecommendations() {\n    try {\n      const response = await apiClient.get('/nutrition/recommendations');\n      return {\n        success: true,\n        nutritionPlans: response.data.nutritionPlans\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      return {\n        success: false,\n        error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to fetch nutrition recommendations'\n      };\n    }\n  }\n\n  // Create nutrition recommendation\n  async createRecommendation(recommendationData) {\n    try {\n      const response = await apiClient.post('/nutrition/recommendations', recommendationData);\n      return {\n        success: true,\n        nutritionPlan: response.data.nutritionPlan\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      return {\n        success: false,\n        error: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to create nutrition recommendation'\n      };\n    }\n  }\n\n  // Update nutrition recommendation\n  async updateRecommendation(recommendationId, recommendationData) {\n    try {\n      const response = await apiClient.put(`/nutrition/recommendations/${recommendationId}`, recommendationData);\n      return {\n        success: true,\n        nutritionPlan: response.data.nutritionPlan\n      };\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      return {\n        success: false,\n        error: ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Failed to update nutrition recommendation'\n      };\n    }\n  }\n\n  // Delete nutrition recommendation\n  async deleteRecommendation(recommendationId) {\n    try {\n      await apiClient.delete(`/nutrition/recommendations/${recommendationId}`);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      return {\n        success: false,\n        error: ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Failed to delete nutrition recommendation'\n      };\n    }\n  }\n\n  // Create nutrition guideline (Vet/Admin only)\n  async createGuideline(guidelineData) {\n    try {\n      const response = await apiClient.post('/nutrition/guidelines', guidelineData);\n      return {\n        success: true,\n        guideline: response.data.guideline\n      };\n    } catch (error) {\n      var _error$response7, _error$response7$data;\n      return {\n        success: false,\n        error: ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || 'Failed to create nutrition guideline'\n      };\n    }\n  }\n\n  // Update nutrition guideline (Vet/Admin only)\n  async updateGuideline(guidelineId, guidelineData) {\n    try {\n      const response = await apiClient.put(`/nutrition/guidelines/${guidelineId}`, guidelineData);\n      return {\n        success: true,\n        guideline: response.data.guideline\n      };\n    } catch (error) {\n      var _error$response8, _error$response8$data;\n      return {\n        success: false,\n        error: ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || 'Failed to update nutrition guideline'\n      };\n    }\n  }\n\n  // Publish nutrition guideline (Admin only)\n  async publishGuideline(guidelineId) {\n    try {\n      const response = await apiClient.patch(`/nutrition/guidelines/${guidelineId}/publish`);\n      return {\n        success: true,\n        guideline: response.data.guideline\n      };\n    } catch (error) {\n      var _error$response9, _error$response9$data;\n      return {\n        success: false,\n        error: ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : (_error$response9$data = _error$response9.data) === null || _error$response9$data === void 0 ? void 0 : _error$response9$data.message) || 'Failed to publish nutrition guideline'\n      };\n    }\n  }\n\n  // Delete nutrition guideline (Vet/Admin only)\n  async deleteGuideline(guidelineId) {\n    try {\n      await apiClient.delete(`/nutrition/guidelines/${guidelineId}`);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response0, _error$response0$data;\n      return {\n        success: false,\n        error: ((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : (_error$response0$data = _error$response0.data) === null || _error$response0$data === void 0 ? void 0 : _error$response0$data.message) || 'Failed to delete nutrition guideline'\n      };\n    }\n  }\n}\nexport default new NutritionService();","map":{"version":3,"names":["apiClient","NutritionService","getGuidelines","response","get","success","guidelines","data","error","_error$response","_error$response$data","message","getGuideline","guidelineId","guideline","_error$response2","_error$response2$data","getRecommendations","nutritionPlans","_error$response3","_error$response3$data","createRecommendation","recommendationData","post","nutritionPlan","_error$response4","_error$response4$data","updateRecommendation","recommendationId","put","_error$response5","_error$response5$data","deleteRecommendation","delete","_error$response6","_error$response6$data","createGuideline","guidelineData","_error$response7","_error$response7$data","updateGuideline","_error$response8","_error$response8$data","publishGuideline","patch","_error$response9","_error$response9$data","deleteGuideline","_error$response0","_error$response0$data"],"sources":["D:/senior.project/pet-health-docs/frontend/src/services/nutritionService.js"],"sourcesContent":["import apiClient from './api';\r\n\r\nclass NutritionService {\r\n  // Get approved nutrition guidelines\r\n  async getGuidelines() {\r\n    try {\r\n      const response = await apiClient.get('/nutrition/guidelines');\r\n      return { success: true, guidelines: response.data.guidelines };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to fetch nutrition guidelines',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Get specific nutrition guideline\r\n  async getGuideline(guidelineId) {\r\n    try {\r\n      const response = await apiClient.get(`/nutrition/guidelines/${guidelineId}`);\r\n      return { success: true, guideline: response.data.guideline };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to fetch nutrition guideline',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Get nutrition recommendations for pets\r\n  async getRecommendations() {\r\n    try {\r\n      const response = await apiClient.get('/nutrition/recommendations');\r\n      return { success: true, nutritionPlans: response.data.nutritionPlans };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to fetch nutrition recommendations',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Create nutrition recommendation\r\n  async createRecommendation(recommendationData) {\r\n    try {\r\n      const response = await apiClient.post('/nutrition/recommendations', recommendationData);\r\n      return { success: true, nutritionPlan: response.data.nutritionPlan };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to create nutrition recommendation',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Update nutrition recommendation\r\n  async updateRecommendation(recommendationId, recommendationData) {\r\n    try {\r\n      const response = await apiClient.put(`/nutrition/recommendations/${recommendationId}`, recommendationData);\r\n      return { success: true, nutritionPlan: response.data.nutritionPlan };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to update nutrition recommendation',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Delete nutrition recommendation\r\n  async deleteRecommendation(recommendationId) {\r\n    try {\r\n      await apiClient.delete(`/nutrition/recommendations/${recommendationId}`);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to delete nutrition recommendation',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Create nutrition guideline (Vet/Admin only)\r\n  async createGuideline(guidelineData) {\r\n    try {\r\n      const response = await apiClient.post('/nutrition/guidelines', guidelineData);\r\n      return { success: true, guideline: response.data.guideline };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to create nutrition guideline',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Update nutrition guideline (Vet/Admin only)\r\n  async updateGuideline(guidelineId, guidelineData) {\r\n    try {\r\n      const response = await apiClient.put(`/nutrition/guidelines/${guidelineId}`, guidelineData);\r\n      return { success: true, guideline: response.data.guideline };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to update nutrition guideline',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Publish nutrition guideline (Admin only)\r\n  async publishGuideline(guidelineId) {\r\n    try {\r\n      const response = await apiClient.patch(`/nutrition/guidelines/${guidelineId}/publish`);\r\n      return { success: true, guideline: response.data.guideline };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to publish nutrition guideline',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Delete nutrition guideline (Vet/Admin only)\r\n  async deleteGuideline(guidelineId) {\r\n    try {\r\n      await apiClient.delete(`/nutrition/guidelines/${guidelineId}`);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to delete nutrition guideline',\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport default new NutritionService();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}