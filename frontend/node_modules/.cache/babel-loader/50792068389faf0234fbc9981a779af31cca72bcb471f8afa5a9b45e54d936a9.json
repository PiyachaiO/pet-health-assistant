{"ast":null,"code":"import apiClient from './api';\nclass AdminService {\n  // Get pending approvals\n  async getPendingApprovals() {\n    try {\n      const response = await apiClient.get('/admin/pending-approvals');\n      return {\n        success: true,\n        appointments: response.data.appointments,\n        nutrition_guidelines: response.data.nutrition_guidelines\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to fetch pending approvals'\n      };\n    }\n  }\n\n  // Approve appointment\n  async approveAppointment(appointmentId, notes) {\n    try {\n      const response = await apiClient.patch(`/admin/appointments/${appointmentId}/approve`, {\n        notes\n      });\n      return {\n        success: true,\n        appointment: response.data.appointment\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to approve appointment'\n      };\n    }\n  }\n\n  // Reject appointment\n  async rejectAppointment(appointmentId, notes) {\n    try {\n      const response = await apiClient.patch(`/admin/appointments/${appointmentId}/reject`, {\n        notes\n      });\n      return {\n        success: true,\n        appointment: response.data.appointment\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      return {\n        success: false,\n        error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to reject appointment'\n      };\n    }\n  }\n\n  // Approve nutrition guideline\n  async approveNutritionGuideline(guidelineId, notes) {\n    try {\n      const response = await apiClient.patch(`/admin/nutrition-guidelines/${guidelineId}/approve`, {\n        notes\n      });\n      return {\n        success: true,\n        guideline: response.data.guideline\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      return {\n        success: false,\n        error: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to approve nutrition guideline'\n      };\n    }\n  }\n\n  // Reject nutrition guideline\n  async rejectNutritionGuideline(guidelineId, notes) {\n    try {\n      const response = await apiClient.patch(`/admin/nutrition-guidelines/${guidelineId}/reject`, {\n        notes\n      });\n      return {\n        success: true,\n        guideline: response.data.guideline\n      };\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      return {\n        success: false,\n        error: ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Failed to reject nutrition guideline'\n      };\n    }\n  }\n\n  // Get system statistics\n  async getStatistics() {\n    try {\n      const response = await apiClient.get('/admin/statistics');\n      return {\n        success: true,\n        users: response.data.users,\n        pets: response.data.pets,\n        appointments: response.data.appointments\n      };\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      return {\n        success: false,\n        error: ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Failed to fetch statistics'\n      };\n    }\n  }\n\n  // Get all users\n  async getAllUsers() {\n    try {\n      const response = await apiClient.get('/admin/users');\n      return {\n        success: true,\n        users: response.data.users\n      };\n    } catch (error) {\n      var _error$response7, _error$response7$data;\n      return {\n        success: false,\n        error: ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || 'Failed to fetch users'\n      };\n    }\n  }\n\n  // Update user role\n  async updateUserRole(userId, role) {\n    try {\n      const response = await apiClient.patch(`/admin/users/${userId}/role`, {\n        role\n      });\n      return {\n        success: true,\n        user: response.data.user\n      };\n    } catch (error) {\n      var _error$response8, _error$response8$data;\n      return {\n        success: false,\n        error: ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || 'Failed to update user role'\n      };\n    }\n  }\n}\nexport default new AdminService();","map":{"version":3,"names":["apiClient","AdminService","getPendingApprovals","response","get","success","appointments","data","nutrition_guidelines","error","_error$response","_error$response$data","message","approveAppointment","appointmentId","notes","patch","appointment","_error$response2","_error$response2$data","rejectAppointment","_error$response3","_error$response3$data","approveNutritionGuideline","guidelineId","guideline","_error$response4","_error$response4$data","rejectNutritionGuideline","_error$response5","_error$response5$data","getStatistics","users","pets","_error$response6","_error$response6$data","getAllUsers","_error$response7","_error$response7$data","updateUserRole","userId","role","user","_error$response8","_error$response8$data"],"sources":["D:/senior.project/pet-health-docs/frontend/src/services/adminService.js"],"sourcesContent":["import apiClient from './api';\r\n\r\nclass AdminService {\r\n  // Get pending approvals\r\n  async getPendingApprovals() {\r\n    try {\r\n      const response = await apiClient.get('/admin/pending-approvals');\r\n      return { \r\n        success: true, \r\n        appointments: response.data.appointments,\r\n        nutrition_guidelines: response.data.nutrition_guidelines \r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to fetch pending approvals',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Approve appointment\r\n  async approveAppointment(appointmentId, notes) {\r\n    try {\r\n      const response = await apiClient.patch(`/admin/appointments/${appointmentId}/approve`, { notes });\r\n      return { success: true, appointment: response.data.appointment };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to approve appointment',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Reject appointment\r\n  async rejectAppointment(appointmentId, notes) {\r\n    try {\r\n      const response = await apiClient.patch(`/admin/appointments/${appointmentId}/reject`, { notes });\r\n      return { success: true, appointment: response.data.appointment };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to reject appointment',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Approve nutrition guideline\r\n  async approveNutritionGuideline(guidelineId, notes) {\r\n    try {\r\n      const response = await apiClient.patch(`/admin/nutrition-guidelines/${guidelineId}/approve`, { notes });\r\n      return { success: true, guideline: response.data.guideline };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to approve nutrition guideline',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Reject nutrition guideline\r\n  async rejectNutritionGuideline(guidelineId, notes) {\r\n    try {\r\n      const response = await apiClient.patch(`/admin/nutrition-guidelines/${guidelineId}/reject`, { notes });\r\n      return { success: true, guideline: response.data.guideline };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to reject nutrition guideline',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Get system statistics\r\n  async getStatistics() {\r\n    try {\r\n      const response = await apiClient.get('/admin/statistics');\r\n      return { \r\n        success: true, \r\n        users: response.data.users,\r\n        pets: response.data.pets,\r\n        appointments: response.data.appointments \r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to fetch statistics',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Get all users\r\n  async getAllUsers() {\r\n    try {\r\n      const response = await apiClient.get('/admin/users');\r\n      return { success: true, users: response.data.users };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to fetch users',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Update user role\r\n  async updateUserRole(userId, role) {\r\n    try {\r\n      const response = await apiClient.patch(`/admin/users/${userId}/role`, { role });\r\n      return { success: true, user: response.data.user };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to update user role',\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport default new AdminService();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}