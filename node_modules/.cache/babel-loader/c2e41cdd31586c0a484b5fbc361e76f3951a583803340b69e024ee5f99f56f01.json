{"ast":null,"code":"import axios from'axios';// API Configuration\nconst API_CONFIG={baseURL:process.env.REACT_APP_API_URL||'/api',timeout:15000// เพิ่ม timeout เป็น 15 วินาที\n};// Create axios instance\nconst apiClient=axios.create(API_CONFIG);// Request interceptor\napiClient.interceptors.request.use(config=>{// Check if we're in browser environment\nif(typeof window!=='undefined'){const token=localStorage.getItem('token');if(token){config.headers.Authorization=`Bearer ${token}`;if(process.env.NODE_ENV==='development'){var _config$method;console.log(`[API] Request: ${(_config$method=config.method)===null||_config$method===void 0?void 0:_config$method.toUpperCase()} ${config.baseURL}${config.url} (token included)`);}}else{if(process.env.NODE_ENV==='development'){var _config$method2;console.log(`[API] Request: ${(_config$method2=config.method)===null||_config$method2===void 0?void 0:_config$method2.toUpperCase()} ${config.baseURL}${config.url} (no token)`);}}}// Add request ID for tracking\n// config.headers['X-Request-ID'] = generateRequestId();\nreturn config;},error=>{return Promise.reject(error);});// Response interceptor\napiClient.interceptors.response.use(response=>{if(process.env.NODE_ENV==='development'){var _response$config$meth;console.log(`[API] Response: ${response.status} ${(_response$config$meth=response.config.method)===null||_response$config$meth===void 0?void 0:_response$config$meth.toUpperCase()} ${response.config.baseURL}${response.config.url}`,response.data);}return response;},error=>{var _error$response;if(process.env.NODE_ENV==='development'){if(error.response){var _error$config;// The request was made and the server responded with a status code\n// that falls out of the range of 2xx\nconsole.error(`API Error [${(_error$config=error.config)===null||_error$config===void 0?void 0:_error$config.url}]:`,{status:error.response.status,data:error.response.data,headers:error.response.headers});}else if(error.request){// The request was made but no response was received\nconsole.error('API Error: No response received',error.request);}else{// Something happened in setting up the request that triggered an Error\nconsole.error('API Error: Request setup failed',error.message);}}// Handle authentication errors\nif(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('token');window.location.href='/login';}return Promise.reject(error);});// Generate unique request ID\nconst generateRequestId=()=>{return`req_${Date.now()}_${Math.random().toString(36).substr(2,9)}`;};// Global error handler\nexport const handleApiError=error=>{var _error$response2,_error$response3,_error$response4;if(((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===401){// Redirect to login\nwindow.location.href='/login';}else if(((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.status)===403){// Show permission denied message\nshowNotification('คุณไม่มีสิทธิ์ในการดำเนินการนี้','error');}else if(((_error$response4=error.response)===null||_error$response4===void 0?void 0:_error$response4.status)===422){// Show validation errors\nconst errors=error.response.data.errors;showValidationErrors(errors);}else{// Show generic error\nshowNotification('เกิดข้อผิดพลาด กรุณาลองใหม่อีกครั้ง','error');}};// Simple notification function (can be replaced with your preferred notification library)\nconst showNotification=function(message){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'info';console.log(`${type.toUpperCase()}: ${message}`);// You can integrate with toast libraries like react-toastify here\n};const showValidationErrors=errors=>{if(errors&&typeof errors==='object'){Object.values(errors).forEach(error=>{showNotification(error,'error');});}};export default apiClient;","map":{"version":3,"names":["axios","API_CONFIG","baseURL","process","env","REACT_APP_API_URL","timeout","apiClient","create","interceptors","request","use","config","window","token","localStorage","getItem","headers","Authorization","NODE_ENV","_config$method","console","log","method","toUpperCase","url","_config$method2","error","Promise","reject","response","_response$config$meth","status","data","_error$response","_error$config","message","removeItem","location","href","generateRequestId","Date","now","Math","random","toString","substr","handleApiError","_error$response2","_error$response3","_error$response4","showNotification","errors","showValidationErrors","type","arguments","length","undefined","Object","values","forEach"],"sources":["D:/senior.project/pet-health-docs/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// API Configuration\r\nconst API_CONFIG = {\r\n  baseURL: process.env.REACT_APP_API_URL || '/api',\r\n  timeout: 15000, // เพิ่ม timeout เป็น 15 วินาที\r\n};\r\n\r\n// Create axios instance\r\nconst apiClient = axios.create(API_CONFIG);\r\n\r\n// Request interceptor\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    // Check if we're in browser environment\r\n    if (typeof window !== 'undefined') {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n        if (process.env.NODE_ENV === 'development') {\r\n          console.log(`[API] Request: ${config.method?.toUpperCase()} ${config.baseURL}${config.url} (token included)`);\r\n        }\r\n      } else {\r\n        if (process.env.NODE_ENV === 'development') {\r\n          console.log(`[API] Request: ${config.method?.toUpperCase()} ${config.baseURL}${config.url} (no token)`);\r\n        }\r\n      }\r\n    }\r\n    \r\n    // Add request ID for tracking\r\n    // config.headers['X-Request-ID'] = generateRequestId();\r\n    \r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor\r\napiClient.interceptors.response.use(\r\n  (response) => {\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log(`[API] Response: ${response.status} ${response.config.method?.toUpperCase()} ${response.config.baseURL}${response.config.url}`, response.data);\r\n    }\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (process.env.NODE_ENV === 'development') {\r\n      if (error.response) {\r\n        // The request was made and the server responded with a status code\r\n        // that falls out of the range of 2xx\r\n        console.error(`API Error [${error.config?.url}]:`, {\r\n          status: error.response.status,\r\n          data: error.response.data,\r\n          headers: error.response.headers,\r\n        });\r\n      } else if (error.request) {\r\n        // The request was made but no response was received\r\n        console.error('API Error: No response received', error.request);\r\n      } else {\r\n        // Something happened in setting up the request that triggered an Error\r\n        console.error('API Error: Request setup failed', error.message);\r\n      }\r\n    }\r\n    \r\n    // Handle authentication errors\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Generate unique request ID\r\nconst generateRequestId = () => {\r\n  return `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n};\r\n\r\n// Global error handler\r\nexport const handleApiError = (error) => {\r\n  if (error.response?.status === 401) {\r\n    // Redirect to login\r\n    window.location.href = '/login';\r\n  } else if (error.response?.status === 403) {\r\n    // Show permission denied message\r\n    showNotification('คุณไม่มีสิทธิ์ในการดำเนินการนี้', 'error');\r\n  } else if (error.response?.status === 422) {\r\n    // Show validation errors\r\n    const errors = error.response.data.errors;\r\n    showValidationErrors(errors);\r\n  } else {\r\n    // Show generic error\r\n    showNotification('เกิดข้อผิดพลาด กรุณาลองใหม่อีกครั้ง', 'error');\r\n  }\r\n};\r\n\r\n// Simple notification function (can be replaced with your preferred notification library)\r\nconst showNotification = (message, type = 'info') => {\r\n  console.log(`${type.toUpperCase()}: ${message}`);\r\n  // You can integrate with toast libraries like react-toastify here\r\n};\r\n\r\nconst showValidationErrors = (errors) => {\r\n  if (errors && typeof errors === 'object') {\r\n    Object.values(errors).forEach(error => {\r\n      showNotification(error, 'error');\r\n    });\r\n  }\r\n};\r\n\r\nexport default apiClient;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}