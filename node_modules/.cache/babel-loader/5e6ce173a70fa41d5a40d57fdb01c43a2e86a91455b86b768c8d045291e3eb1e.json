{"ast":null,"code":"import apiClient from'./api';class AdminService{// Get pending approvals\nasync getPendingApprovals(){try{const response=await apiClient.get('/admin/pending-approvals');return{success:true,appointments:response.data.appointments,nutrition_guidelines:response.data.nutrition_guidelines};}catch(error){var _error$response,_error$response$data;return{success:false,error:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Failed to fetch pending approvals'};}}// Approve appointment\nasync approveAppointment(appointmentId,notes){try{const response=await apiClient.patch(`/admin/appointments/${appointmentId}/approve`,{notes});return{success:true,appointment:response.data.appointment};}catch(error){var _error$response2,_error$response2$data;return{success:false,error:((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Failed to approve appointment'};}}// Reject appointment\nasync rejectAppointment(appointmentId,notes){try{const response=await apiClient.patch(`/admin/appointments/${appointmentId}/reject`,{notes});return{success:true,appointment:response.data.appointment};}catch(error){var _error$response3,_error$response3$data;return{success:false,error:((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||'Failed to reject appointment'};}}// Approve nutrition guideline\nasync approveNutritionGuideline(guidelineId,notes){try{const response=await apiClient.patch(`/admin/nutrition-guidelines/${guidelineId}/approve`,{notes});return{success:true,guideline:response.data.guideline};}catch(error){var _error$response4,_error$response4$data;return{success:false,error:((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||'Failed to approve nutrition guideline'};}}// Reject nutrition guideline\nasync rejectNutritionGuideline(guidelineId,notes){try{const response=await apiClient.patch(`/admin/nutrition-guidelines/${guidelineId}/reject`,{notes});return{success:true,guideline:response.data.guideline};}catch(error){var _error$response5,_error$response5$data;return{success:false,error:((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.message)||'Failed to reject nutrition guideline'};}}// Get system statistics\nasync getStatistics(){try{const response=await apiClient.get('/admin/statistics');return{success:true,users:response.data.users,pets:response.data.pets,appointments:response.data.appointments};}catch(error){var _error$response6,_error$response6$data;return{success:false,error:((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.message)||'Failed to fetch statistics'};}}// Get all users\nasync getAllUsers(){try{const response=await apiClient.get('/admin/users');return{success:true,users:response.data.users};}catch(error){var _error$response7,_error$response7$data;return{success:false,error:((_error$response7=error.response)===null||_error$response7===void 0?void 0:(_error$response7$data=_error$response7.data)===null||_error$response7$data===void 0?void 0:_error$response7$data.message)||'Failed to fetch users'};}}// Update user role\nasync updateUserRole(userId,role){try{const response=await apiClient.patch(`/admin/users/${userId}/role`,{role});return{success:true,user:response.data.user};}catch(error){var _error$response8,_error$response8$data;return{success:false,error:((_error$response8=error.response)===null||_error$response8===void 0?void 0:(_error$response8$data=_error$response8.data)===null||_error$response8$data===void 0?void 0:_error$response8$data.message)||'Failed to update user role'};}}}const adminService=new AdminService();export default adminService;","map":{"version":3,"names":["apiClient","AdminService","getPendingApprovals","response","get","success","appointments","data","nutrition_guidelines","error","_error$response","_error$response$data","message","approveAppointment","appointmentId","notes","patch","appointment","_error$response2","_error$response2$data","rejectAppointment","_error$response3","_error$response3$data","approveNutritionGuideline","guidelineId","guideline","_error$response4","_error$response4$data","rejectNutritionGuideline","_error$response5","_error$response5$data","getStatistics","users","pets","_error$response6","_error$response6$data","getAllUsers","_error$response7","_error$response7$data","updateUserRole","userId","role","user","_error$response8","_error$response8$data","adminService"],"sources":["D:/senior.project/pet-health-docs/src/services/adminService.js"],"sourcesContent":["import apiClient from './api';\r\n\r\nclass AdminService {\r\n  // Get pending approvals\r\n  async getPendingApprovals() {\r\n    try {\r\n      const response = await apiClient.get('/admin/pending-approvals');\r\n      return { \r\n        success: true, \r\n        appointments: response.data.appointments,\r\n        nutrition_guidelines: response.data.nutrition_guidelines \r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to fetch pending approvals',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Approve appointment\r\n  async approveAppointment(appointmentId, notes) {\r\n    try {\r\n      const response = await apiClient.patch(`/admin/appointments/${appointmentId}/approve`, { notes });\r\n      return { success: true, appointment: response.data.appointment };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to approve appointment',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Reject appointment\r\n  async rejectAppointment(appointmentId, notes) {\r\n    try {\r\n      const response = await apiClient.patch(`/admin/appointments/${appointmentId}/reject`, { notes });\r\n      return { success: true, appointment: response.data.appointment };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to reject appointment',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Approve nutrition guideline\r\n  async approveNutritionGuideline(guidelineId, notes) {\r\n    try {\r\n      const response = await apiClient.patch(`/admin/nutrition-guidelines/${guidelineId}/approve`, { notes });\r\n      return { success: true, guideline: response.data.guideline };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to approve nutrition guideline',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Reject nutrition guideline\r\n  async rejectNutritionGuideline(guidelineId, notes) {\r\n    try {\r\n      const response = await apiClient.patch(`/admin/nutrition-guidelines/${guidelineId}/reject`, { notes });\r\n      return { success: true, guideline: response.data.guideline };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to reject nutrition guideline',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Get system statistics\r\n  async getStatistics() {\r\n    try {\r\n      const response = await apiClient.get('/admin/statistics');\r\n      return { \r\n        success: true, \r\n        users: response.data.users,\r\n        pets: response.data.pets,\r\n        appointments: response.data.appointments \r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to fetch statistics',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Get all users\r\n  async getAllUsers() {\r\n    try {\r\n      const response = await apiClient.get('/admin/users');\r\n      return { success: true, users: response.data.users };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to fetch users',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Update user role\r\n  async updateUserRole(userId, role) {\r\n    try {\r\n      const response = await apiClient.patch(`/admin/users/${userId}/role`, { role });\r\n      return { success: true, user: response.data.user };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to update user role',\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nconst adminService = new AdminService();\r\nexport default adminService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}