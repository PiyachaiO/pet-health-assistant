{"ast":null,"code":"import apiClient from'./api';class ArticleService{// Get published articles\nasync getArticles(){try{const response=await apiClient.get('/articles');return{success:true,articles:response.data.articles};}catch(error){var _error$response,_error$response$data;return{success:false,error:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Failed to fetch articles'};}}// Get specific article by ID\nasync getArticle(articleId){try{const response=await apiClient.get(`/articles/${articleId}`);return{success:true,article:response.data.article};}catch(error){var _error$response2,_error$response2$data;return{success:false,error:((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Failed to fetch article'};}}// Get all articles (Admin/Vet only)\nasync getAllArticles(){try{const response=await apiClient.get('/articles/admin/all');return{success:true,articles:response.data.articles};}catch(error){var _error$response3,_error$response3$data;return{success:false,error:((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||'Failed to fetch all articles'};}}// Get my articles (for veterinarians)\nasync getMyArticles(){try{const response=await apiClient.get('/articles/admin/all');return{success:true,articles:response.data};}catch(error){var _error$response4,_error$response4$data;return{success:false,error:((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||'Failed to fetch my articles'};}}// Create new article (Admin/Vet only)\nasync createArticle(articleData){try{const response=await apiClient.post('/articles',articleData);return{success:true,article:response.data.article};}catch(error){var _error$response5,_error$response5$data;return{success:false,error:((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.message)||'Failed to create article'};}}// Update article (Admin/Vet only)\nasync updateArticle(articleId,articleData){try{const response=await apiClient.put(`/articles/${articleId}`,articleData);return{success:true,article:response.data.article};}catch(error){var _error$response6,_error$response6$data;return{success:false,error:((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.message)||'Failed to update article'};}}// Publish article (Admin only)\nasync publishArticle(articleId){try{const response=await apiClient.patch(`/articles/${articleId}/publish`);return{success:true,article:response.data.article};}catch(error){var _error$response7,_error$response7$data;return{success:false,error:((_error$response7=error.response)===null||_error$response7===void 0?void 0:(_error$response7$data=_error$response7.data)===null||_error$response7$data===void 0?void 0:_error$response7$data.message)||'Failed to publish article'};}}// Delete article (Admin/Vet only)\nasync deleteArticle(articleId){try{await apiClient.delete(`/articles/${articleId}`);return{success:true};}catch(error){var _error$response8,_error$response8$data;return{success:false,error:((_error$response8=error.response)===null||_error$response8===void 0?void 0:(_error$response8$data=_error$response8.data)===null||_error$response8$data===void 0?void 0:_error$response8$data.message)||'Failed to delete article'};}}}const articleService=new ArticleService();export default articleService;","map":{"version":3,"names":["apiClient","ArticleService","getArticles","response","get","success","articles","data","error","_error$response","_error$response$data","message","getArticle","articleId","article","_error$response2","_error$response2$data","getAllArticles","_error$response3","_error$response3$data","getMyArticles","_error$response4","_error$response4$data","createArticle","articleData","post","_error$response5","_error$response5$data","updateArticle","put","_error$response6","_error$response6$data","publishArticle","patch","_error$response7","_error$response7$data","deleteArticle","delete","_error$response8","_error$response8$data","articleService"],"sources":["D:/senior.project/pet-health-docs/src/services/articleService.js"],"sourcesContent":["import apiClient from './api';\r\n\r\nclass ArticleService {\r\n  // Get published articles\r\n  async getArticles() {\r\n    try {\r\n      const response = await apiClient.get('/articles');\r\n      return { success: true, articles: response.data.articles };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to fetch articles',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Get specific article by ID\r\n  async getArticle(articleId) {\r\n    try {\r\n      const response = await apiClient.get(`/articles/${articleId}`);\r\n      return { success: true, article: response.data.article };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to fetch article',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Get all articles (Admin/Vet only)\r\n  async getAllArticles() {\r\n    try {\r\n      const response = await apiClient.get('/articles/admin/all');\r\n      return { success: true, articles: response.data.articles };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to fetch all articles',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Get my articles (for veterinarians)\r\n  async getMyArticles() {\r\n    try {\r\n      const response = await apiClient.get('/articles/admin/all');\r\n      return { success: true, articles: response.data };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to fetch my articles',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Create new article (Admin/Vet only)\r\n  async createArticle(articleData) {\r\n    try {\r\n      const response = await apiClient.post('/articles', articleData);\r\n      return { success: true, article: response.data.article };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to create article',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Update article (Admin/Vet only)\r\n  async updateArticle(articleId, articleData) {\r\n    try {\r\n      const response = await apiClient.put(`/articles/${articleId}`, articleData);\r\n      return { success: true, article: response.data.article };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to update article',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Publish article (Admin only)\r\n  async publishArticle(articleId) {\r\n    try {\r\n      const response = await apiClient.patch(`/articles/${articleId}/publish`);\r\n      return { success: true, article: response.data.article };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to publish article',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Delete article (Admin/Vet only)\r\n  async deleteArticle(articleId) {\r\n    try {\r\n      await apiClient.delete(`/articles/${articleId}`);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to delete article',\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nconst articleService = new ArticleService();\r\nexport default articleService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}