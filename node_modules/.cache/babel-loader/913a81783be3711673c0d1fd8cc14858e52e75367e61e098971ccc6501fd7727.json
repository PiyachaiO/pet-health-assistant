{"ast":null,"code":"import apiClient from'./api';class AppointmentService{// Get all appointments for current user\nasync getAppointments(){try{const response=await apiClient.get('/appointments');// รองรับทั้งกรณี backend คืน { appointments: [...] } หรือ [...] ตรงๆ\nconst appointments=Array.isArray(response.data)?response.data:response.data.appointments||response.data.data||[];return{success:true,appointments};}catch(error){var _error$response,_error$response$data;return{success:false,error:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Failed to fetch appointments'};}}// Get appointments for veterinarian\nasync getVetAppointments(){try{const response=await apiClient.get('/appointments/vet');return{success:true,appointments:response.data.appointments};}catch(error){var _error$response2,_error$response2$data;return{success:false,error:((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Failed to fetch vet appointments'};}}// Get specific appointment by ID\nasync getAppointment(appointmentId){try{const response=await apiClient.get(`/appointments/${appointmentId}`);return{success:true,appointment:response.data.appointment};}catch(error){var _error$response3,_error$response3$data;return{success:false,error:((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||'Failed to fetch appointment'};}}// Create new appointment\nasync createAppointment(appointmentData){try{const response=await apiClient.post('/appointments',appointmentData);return{success:true,appointment:response.data.appointment};}catch(error){var _error$response4,_error$response4$data;return{success:false,error:((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||'Failed to create appointment'};}}// Update appointment\nasync updateAppointment(appointmentId,appointmentData){try{const response=await apiClient.put(`/appointments/${appointmentId}`,appointmentData);return{success:true,appointment:response.data.appointment};}catch(error){var _error$response5,_error$response5$data;return{success:false,error:((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.message)||'Failed to update appointment'};}}// Cancel appointment\nasync cancelAppointment(appointmentId){try{const response=await apiClient.patch(`/appointments/${appointmentId}/cancel`);return{success:true,appointment:response.data.appointment};}catch(error){var _error$response6,_error$response6$data;return{success:false,error:((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.message)||'Failed to cancel appointment'};}}// Delete appointment\nasync deleteAppointment(appointmentId){try{await apiClient.delete(`/appointments/${appointmentId}`);return{success:true};}catch(error){var _error$response7,_error$response7$data;return{success:false,error:((_error$response7=error.response)===null||_error$response7===void 0?void 0:(_error$response7$data=_error$response7.data)===null||_error$response7$data===void 0?void 0:_error$response7$data.message)||'Failed to delete appointment'};}}}const appointmentService=new AppointmentService();export default appointmentService;export const getAppointments=async()=>{try{const response=await apiClient.get('/appointments');// รองรับทั้งกรณี backend คืน { appointments: [...] } หรือ [...] ตรงๆ\nconst appointments=Array.isArray(response.data)?response.data:response.data.appointments||response.data.data||[];return{success:true,appointments};}catch(error){var _error$response8,_error$response8$data;throw new Error(((_error$response8=error.response)===null||_error$response8===void 0?void 0:(_error$response8$data=_error$response8.data)===null||_error$response8$data===void 0?void 0:_error$response8$data.message)||'Failed to fetch appointments');}};","map":{"version":3,"names":["apiClient","AppointmentService","getAppointments","response","get","appointments","Array","isArray","data","success","error","_error$response","_error$response$data","message","getVetAppointments","_error$response2","_error$response2$data","getAppointment","appointmentId","appointment","_error$response3","_error$response3$data","createAppointment","appointmentData","post","_error$response4","_error$response4$data","updateAppointment","put","_error$response5","_error$response5$data","cancelAppointment","patch","_error$response6","_error$response6$data","deleteAppointment","delete","_error$response7","_error$response7$data","appointmentService","_error$response8","_error$response8$data","Error"],"sources":["D:/senior.project/pet-health-docs/src/services/appointmentService.js"],"sourcesContent":["import apiClient from './api';\r\n\r\nclass AppointmentService {\r\n  // Get all appointments for current user\r\n  async getAppointments() {\r\n    try {\r\n      const response = await apiClient.get('/appointments');\r\n      // รองรับทั้งกรณี backend คืน { appointments: [...] } หรือ [...] ตรงๆ\r\n      const appointments = Array.isArray(response.data)\r\n        ? response.data\r\n        : response.data.appointments || response.data.data || [];\r\n  return { success: true, appointments };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to fetch appointments',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Get appointments for veterinarian\r\n  async getVetAppointments() {\r\n    try {\r\n      const response = await apiClient.get('/appointments/vet');\r\n      return { success: true, appointments: response.data.appointments };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to fetch vet appointments',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Get specific appointment by ID\r\n  async getAppointment(appointmentId) {\r\n    try {\r\n      const response = await apiClient.get(`/appointments/${appointmentId}`);\r\n      return { success: true, appointment: response.data.appointment };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to fetch appointment',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Create new appointment\r\n  async createAppointment(appointmentData) {\r\n    try {\r\n      const response = await apiClient.post('/appointments', appointmentData);\r\n      return { success: true, appointment: response.data.appointment };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to create appointment',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Update appointment\r\n  async updateAppointment(appointmentId, appointmentData) {\r\n    try {\r\n      const response = await apiClient.put(`/appointments/${appointmentId}`, appointmentData);\r\n      return { success: true, appointment: response.data.appointment };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to update appointment',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Cancel appointment\r\n  async cancelAppointment(appointmentId) {\r\n    try {\r\n      const response = await apiClient.patch(`/appointments/${appointmentId}/cancel`);\r\n      return { success: true, appointment: response.data.appointment };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to cancel appointment',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Delete appointment\r\n  async deleteAppointment(appointmentId) {\r\n    try {\r\n      await apiClient.delete(`/appointments/${appointmentId}`);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to delete appointment',\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nconst appointmentService = new AppointmentService();\r\nexport default appointmentService;\r\n\r\nexport const getAppointments = async () => {\r\n  try {\r\n    const response = await apiClient.get('/appointments');\r\n    // รองรับทั้งกรณี backend คืน { appointments: [...] } หรือ [...] ตรงๆ\r\n    const appointments = Array.isArray(response.data)\r\n      ? response.data\r\n      : response.data.appointments || response.data.data || [];\r\n  return { success: true, appointments };\r\n  } catch (error) {\r\n    throw new Error(error.response?.data?.message || 'Failed to fetch appointments');\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}