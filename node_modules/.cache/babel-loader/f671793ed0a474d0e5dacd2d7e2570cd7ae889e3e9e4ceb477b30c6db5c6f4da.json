{"ast":null,"code":"import apiClient from'./api';class NutritionService{// Get approved nutrition guidelines\nasync getGuidelines(){try{const response=await apiClient.get('/nutrition/guidelines');return{success:true,guidelines:response.data.guidelines};}catch(error){var _error$response,_error$response$data;return{success:false,error:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Failed to fetch nutrition guidelines'};}}// Get specific nutrition guideline\nasync getGuideline(guidelineId){try{const response=await apiClient.get(`/nutrition/guidelines/${guidelineId}`);return{success:true,guideline:response.data.guideline};}catch(error){var _error$response2,_error$response2$data;return{success:false,error:((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Failed to fetch nutrition guideline'};}}// Get nutrition recommendations for pets\nasync getRecommendations(){try{const response=await apiClient.get('/nutrition/recommendations');return{success:true,nutritionPlans:response.data.nutritionPlans};}catch(error){var _error$response3,_error$response3$data;return{success:false,error:((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||'Failed to fetch nutrition recommendations'};}}// Create nutrition recommendation\nasync createRecommendation(recommendationData){try{const response=await apiClient.post('/nutrition/recommendations',recommendationData);return{success:true,nutritionPlan:response.data.nutritionPlan};}catch(error){var _error$response4,_error$response4$data;return{success:false,error:((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||'Failed to create nutrition recommendation'};}}// Update nutrition recommendation\nasync updateRecommendation(recommendationId,recommendationData){try{const response=await apiClient.put(`/nutrition/recommendations/${recommendationId}`,recommendationData);return{success:true,nutritionPlan:response.data.nutritionPlan};}catch(error){var _error$response5,_error$response5$data;return{success:false,error:((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.message)||'Failed to update nutrition recommendation'};}}// Delete nutrition recommendation\nasync deleteRecommendation(recommendationId){try{await apiClient.delete(`/nutrition/recommendations/${recommendationId}`);return{success:true};}catch(error){var _error$response6,_error$response6$data;return{success:false,error:((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.message)||'Failed to delete nutrition recommendation'};}}// Create nutrition guideline (Vet/Admin only)\nasync createGuideline(guidelineData){try{const response=await apiClient.post('/nutrition/guidelines',guidelineData);return{success:true,guideline:response.data.guideline};}catch(error){var _error$response7,_error$response7$data;return{success:false,error:((_error$response7=error.response)===null||_error$response7===void 0?void 0:(_error$response7$data=_error$response7.data)===null||_error$response7$data===void 0?void 0:_error$response7$data.message)||'Failed to create nutrition guideline'};}}// Update nutrition guideline (Vet/Admin only)\nasync updateGuideline(guidelineId,guidelineData){try{const response=await apiClient.put(`/nutrition/guidelines/${guidelineId}`,guidelineData);return{success:true,guideline:response.data.guideline};}catch(error){var _error$response8,_error$response8$data;return{success:false,error:((_error$response8=error.response)===null||_error$response8===void 0?void 0:(_error$response8$data=_error$response8.data)===null||_error$response8$data===void 0?void 0:_error$response8$data.message)||'Failed to update nutrition guideline'};}}// Publish nutrition guideline (Admin only)\nasync publishGuideline(guidelineId){try{const response=await apiClient.patch(`/nutrition/guidelines/${guidelineId}/publish`);return{success:true,guideline:response.data.guideline};}catch(error){var _error$response9,_error$response9$data;return{success:false,error:((_error$response9=error.response)===null||_error$response9===void 0?void 0:(_error$response9$data=_error$response9.data)===null||_error$response9$data===void 0?void 0:_error$response9$data.message)||'Failed to publish nutrition guideline'};}}// Delete nutrition guideline (Vet/Admin only)\nasync deleteGuideline(guidelineId){try{await apiClient.delete(`/nutrition/guidelines/${guidelineId}`);return{success:true};}catch(error){var _error$response0,_error$response0$data;return{success:false,error:((_error$response0=error.response)===null||_error$response0===void 0?void 0:(_error$response0$data=_error$response0.data)===null||_error$response0$data===void 0?void 0:_error$response0$data.message)||'Failed to delete nutrition guideline'};}}}const nutritionService=new NutritionService();export default nutritionService;","map":{"version":3,"names":["apiClient","NutritionService","getGuidelines","response","get","success","guidelines","data","error","_error$response","_error$response$data","message","getGuideline","guidelineId","guideline","_error$response2","_error$response2$data","getRecommendations","nutritionPlans","_error$response3","_error$response3$data","createRecommendation","recommendationData","post","nutritionPlan","_error$response4","_error$response4$data","updateRecommendation","recommendationId","put","_error$response5","_error$response5$data","deleteRecommendation","delete","_error$response6","_error$response6$data","createGuideline","guidelineData","_error$response7","_error$response7$data","updateGuideline","_error$response8","_error$response8$data","publishGuideline","patch","_error$response9","_error$response9$data","deleteGuideline","_error$response0","_error$response0$data","nutritionService"],"sources":["D:/senior.project/pet-health-docs/src/services/nutritionService.js"],"sourcesContent":["import apiClient from './api';\r\n\r\nclass NutritionService {\r\n  // Get approved nutrition guidelines\r\n  async getGuidelines() {\r\n    try {\r\n      const response = await apiClient.get('/nutrition/guidelines');\r\n      return { success: true, guidelines: response.data.guidelines };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to fetch nutrition guidelines',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Get specific nutrition guideline\r\n  async getGuideline(guidelineId) {\r\n    try {\r\n      const response = await apiClient.get(`/nutrition/guidelines/${guidelineId}`);\r\n      return { success: true, guideline: response.data.guideline };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to fetch nutrition guideline',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Get nutrition recommendations for pets\r\n  async getRecommendations() {\r\n    try {\r\n      const response = await apiClient.get('/nutrition/recommendations');\r\n      return { success: true, nutritionPlans: response.data.nutritionPlans };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to fetch nutrition recommendations',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Create nutrition recommendation\r\n  async createRecommendation(recommendationData) {\r\n    try {\r\n      const response = await apiClient.post('/nutrition/recommendations', recommendationData);\r\n      return { success: true, nutritionPlan: response.data.nutritionPlan };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to create nutrition recommendation',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Update nutrition recommendation\r\n  async updateRecommendation(recommendationId, recommendationData) {\r\n    try {\r\n      const response = await apiClient.put(`/nutrition/recommendations/${recommendationId}`, recommendationData);\r\n      return { success: true, nutritionPlan: response.data.nutritionPlan };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to update nutrition recommendation',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Delete nutrition recommendation\r\n  async deleteRecommendation(recommendationId) {\r\n    try {\r\n      await apiClient.delete(`/nutrition/recommendations/${recommendationId}`);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to delete nutrition recommendation',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Create nutrition guideline (Vet/Admin only)\r\n  async createGuideline(guidelineData) {\r\n    try {\r\n      const response = await apiClient.post('/nutrition/guidelines', guidelineData);\r\n      return { success: true, guideline: response.data.guideline };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to create nutrition guideline',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Update nutrition guideline (Vet/Admin only)\r\n  async updateGuideline(guidelineId, guidelineData) {\r\n    try {\r\n      const response = await apiClient.put(`/nutrition/guidelines/${guidelineId}`, guidelineData);\r\n      return { success: true, guideline: response.data.guideline };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to update nutrition guideline',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Publish nutrition guideline (Admin only)\r\n  async publishGuideline(guidelineId) {\r\n    try {\r\n      const response = await apiClient.patch(`/nutrition/guidelines/${guidelineId}/publish`);\r\n      return { success: true, guideline: response.data.guideline };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to publish nutrition guideline',\r\n      };\r\n    }\r\n  }\r\n\r\n  // Delete nutrition guideline (Vet/Admin only)\r\n  async deleteGuideline(guidelineId) {\r\n    try {\r\n      await apiClient.delete(`/nutrition/guidelines/${guidelineId}`);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to delete nutrition guideline',\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nconst nutritionService = new NutritionService();\r\nexport default nutritionService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}